/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */


buildscript {
    ext {
      // could be cleaned up but I don't groovy
      getEnvKey = { key ->
          //println("Called getEnvKey with ${key}")
          ret = "null"
          rootProject.file('.env').eachLine { line ->
              def (name, reference) = line.split('=')
              if (key.equals(name)) {
                //println("found key with ${reference}")
                ret = reference
              }
          }
          //println("returning ${ret}")
          return ret
      }
      testone = 
      elasticsearchVersion = getEnvKey("ES_VERSION")
      pluginVersion = getEnvKey("PLUGIN_VERSION")
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${elasticsearchVersion}"
    }
}

configurations.all {
  resolutionStrategy.dependencySubstitution {
    substitute project(':rest-api-spec') with module ("org.elasticsearch:rest-api-spec:${elasticsearchVersion}")
  }
}

apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'java'

licenseFile = rootProject.file('LICENSE.txt')
noticeFile = rootProject.file('NOTICE.txt')

version = "${pluginVersion}-${elasticsearchVersion}"

esplugin {
  description 'Plugin that allows indexing of tokens at specific positions with confidence payload'
  classname 'com.eigendomain.eslatticeindex.plugin.LatticeIndexPlugin'
  name project.name
  licenseFile rootProject.file('LICENSE.txt')
  noticeFile rootProject.file('NOTICE.txt')


  dependencies {
    testCompile group: 'org.elasticsearch.test', name: 'framework', version: "${elasticsearchVersion}"
 }
}

test.enabled = true
integTest.enabled = false
